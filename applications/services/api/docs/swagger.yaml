basePath: /api
definitions:
  main.Book:
    properties:
      amount:
        type: integer
      author:
        type: string
      description:
        type: string
      isbn:
        type: string
      name:
        type: string
      year:
        type: integer
    type: object
  main.BookSimple:
    properties:
      author:
        type: string
      isbn:
        type: string
      name:
        type: string
      year:
        type: integer
    type: object
  main.BookTitle:
    properties:
      title:
        type: string
    type: object
  main.Loan:
    properties:
      entityId:
        type: integer
      id:
        type: integer
      status:
        type: integer
      userId:
        type: integer
    type: object
  main.LoanEntry:
    properties:
      entityId:
        type: integer
      userId:
        type: integer
    type: object
  main.Log:
    properties:
      entityId:
        type: integer
      id:
        type: integer
      unix:
        type: integer
      userId:
        type: integer
    type: object
  main.LogEntry:
    properties:
      entityId:
        type: integer
      unix:
        type: integer
      userId:
        type: integer
    type: object
  main.User:
    properties:
      age:
        type: integer
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  main.Vinyl:
    properties:
      amount:
        type: integer
      artist:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      year:
        type: integer
    type: object
  main.VinylSimple:
    properties:
      artist:
        type: string
      id:
        type: integer
      name:
        type: string
      year:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for school project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Book & Venyl Loan Service
  version: "1.0"
paths:
  /book/all/:
    get:
      consumes:
      - application/json
      description: Gets a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "404":
          description: ""
      tags:
      - Book
  /book/checkout/{title}:
    get:
      consumes:
      - application/json
      description: Checkouts a book
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BookTitle'
        "404":
          description: ""
      tags:
      - Book
  /book/get-recs-author/{title}:
    get:
      consumes:
      - application/json
      description: Gets a recommended list of all books from author by title
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.BookSimple'
            type: array
        "404":
          description: ""
      tags:
      - Book
  /book/get-recs-year/{title}:
    get:
      consumes:
      - application/json
      description: Gets a recommended list of all books from year by title
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.BookSimple'
            type: array
        "404":
          description: ""
      tags:
      - Book
  /book/get-simple/{title}:
    get:
      consumes:
      - application/json
      description: Gets a simplified list of books by title
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BookSimple'
        "404":
          description: ""
      tags:
      - Book
  /book/get/{title}:
    get:
      consumes:
      - application/json
      description: Gets a book by title
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: ""
      tags:
      - Book
  /book/return/{title}:
    get:
      consumes:
      - application/json
      description: Returns a book
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BookTitle'
        "404":
          description: ""
      tags:
      - Book
  /book/search/{title}:
    get:
      consumes:
      - application/json
      description: Gets a list of all searched books by title
      parameters:
      - description: Title of book
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "404":
          description: ""
      tags:
      - Book
  /book/write-csv-to-db/:
    get:
      consumes:
      - application/json
      description: Writes a csv file to the db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BookTitle'
        "404":
          description: ""
      tags:
      - Book
  /loan/all-by-user/{id}:
    get:
      consumes:
      - application/json
      description: Gets a list of all loans by a user
      parameters:
      - description: Id of all loans by user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Loan'
            type: array
        "404":
          description: ""
      tags:
      - Loan
  /loan/all/:
    get:
      consumes:
      - application/json
      description: Gets a list of all loans
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Loan'
            type: array
        "404":
          description: ""
      tags:
      - Loan
  /loan/create/:
    post:
      consumes:
      - application/json
      description: Creates a loan entry
      parameters:
      - description: Create loan
        in: body
        name: LoanEntry
        required: true
        schema:
          $ref: '#/definitions/main.LoanEntry'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - Loan
  /loan/get/{id}:
    get:
      consumes:
      - application/json
      description: Gets a loan by id
      parameters:
      - description: Id of loan
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Loan'
        "404":
          description: ""
      tags:
      - Loan
  /log/all-by-user/{id}:
    get:
      consumes:
      - application/json
      description: Says a list of all logs by user
      parameters:
      - description: Id of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Log'
            type: array
        "404":
          description: ""
      tags:
      - Log
  /log/create/:
    post:
      consumes:
      - application/json
      description: Creates a log entry
      parameters:
      - description: Create log entry
        in: body
        name: LogEntry
        required: true
        schema:
          $ref: '#/definitions/main.LogEntry'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - Log
  /log/get-by-user/{userId}/{logId}:
    get:
      consumes:
      - application/json
      description: Gets a log by user
      parameters:
      - description: Id of user
        in: path
        name: userId
        required: true
        type: integer
      - description: Id of log
        in: path
        name: logId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Log'
        "404":
          description: ""
      tags:
      - Log
  /user/all/:
    get:
      consumes:
      - application/json
      description: Gets a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
        "404":
          description: ""
      tags:
      - User
  /user/create/:
    post:
      consumes:
      - application/json
      description: Creates a user
      parameters:
      - description: User to create
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - User
  /user/get/{id}:
    get:
      consumes:
      - application/json
      description: Gets a user by id
      parameters:
      - description: Id of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "404":
          description: ""
      tags:
      - User
  /vinyl/all/:
    get:
      consumes:
      - application/json
      description: Gets a list of all vinyls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Vinyl'
            type: array
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/get-by-title/{title}:
    get:
      consumes:
      - application/json
      description: Gets a vinyl by title
      parameters:
      - description: Title of vinyl
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Vinyl'
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/get-recs-artist/{title}:
    get:
      consumes:
      - application/json
      description: Gets a recommended list of all vinyls from artist by title
      parameters:
      - description: Title of vinyl
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.VinylSimple'
            type: array
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/get-recs-year/{title}:
    get:
      consumes:
      - application/json
      description: Gets a recommended list of all vinyls from year by title
      parameters:
      - description: Title of vinyl
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.VinylSimple'
            type: array
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/get-simple/{title}:
    get:
      consumes:
      - application/json
      description: Gets a simplified list of vinyls by title
      parameters:
      - description: Title of vinyl
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.VinylSimple'
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/get/{id}:
    get:
      consumes:
      - application/json
      description: Gets a vinyl by id
      parameters:
      - description: Id of vinyl
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Vinyl'
        "404":
          description: ""
      tags:
      - Vinyl
  /vinyl/search/{title}:
    get:
      consumes:
      - application/json
      description: Gets a list of vinyls from search by title
      parameters:
      - description: Title of vinyl
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Vinyl'
            type: array
        "404":
          description: ""
      tags:
      - Vinyl
schemes:
- http
swagger: "2.0"
