# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
import vinyl_pb2 as vinyl__pb2


class VinylServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVinyl = channel.unary_unary(
                '/rpc.VinylService/GetVinyl',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.SerializeToString,
                response_deserializer=vinyl__pb2.Vinyl.FromString,
                )
        self.GetVinylByTitle = channel.unary_unary(
                '/rpc.VinylService/GetVinylByTitle',
                request_serializer=vinyl__pb2.VinylTitle.SerializeToString,
                response_deserializer=vinyl__pb2.Vinyl.FromString,
                )
        self.GetVinylSimpleByTitle = channel.unary_unary(
                '/rpc.VinylService/GetVinylSimpleByTitle',
                request_serializer=vinyl__pb2.VinylTitle.SerializeToString,
                response_deserializer=vinyl__pb2.VinylSimple.FromString,
                )
        self.GetVinylsBySearch = channel.unary_unary(
                '/rpc.VinylService/GetVinylsBySearch',
                request_serializer=vinyl__pb2.VinylTitle.SerializeToString,
                response_deserializer=vinyl__pb2.VinylList.FromString,
                )
        self.GetAllVinyls = channel.unary_unary(
                '/rpc.VinylService/GetAllVinyls',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=vinyl__pb2.VinylList.FromString,
                )
        self.GetVinylRecsArtist = channel.unary_unary(
                '/rpc.VinylService/GetVinylRecsArtist',
                request_serializer=vinyl__pb2.VinylTitle.SerializeToString,
                response_deserializer=vinyl__pb2.VinylSimpleList.FromString,
                )
        self.GetVinylRecsYear = channel.unary_unary(
                '/rpc.VinylService/GetVinylRecsYear',
                request_serializer=vinyl__pb2.VinylTitle.SerializeToString,
                response_deserializer=vinyl__pb2.VinylSimpleList.FromString,
                )


class VinylServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVinyl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVinylByTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVinylSimpleByTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVinylsBySearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllVinyls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVinylRecsArtist(self, request, context):
        """Parameters should be changed from title to isbn
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVinylRecsYear(self, request, context):
        """rpc GetVinylRecsgenre (Vinyl) returns (VinylList);
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VinylServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVinyl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinyl,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.FromString,
                    response_serializer=vinyl__pb2.Vinyl.SerializeToString,
            ),
            'GetVinylByTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinylByTitle,
                    request_deserializer=vinyl__pb2.VinylTitle.FromString,
                    response_serializer=vinyl__pb2.Vinyl.SerializeToString,
            ),
            'GetVinylSimpleByTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinylSimpleByTitle,
                    request_deserializer=vinyl__pb2.VinylTitle.FromString,
                    response_serializer=vinyl__pb2.VinylSimple.SerializeToString,
            ),
            'GetVinylsBySearch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinylsBySearch,
                    request_deserializer=vinyl__pb2.VinylTitle.FromString,
                    response_serializer=vinyl__pb2.VinylList.SerializeToString,
            ),
            'GetAllVinyls': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllVinyls,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=vinyl__pb2.VinylList.SerializeToString,
            ),
            'GetVinylRecsArtist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinylRecsArtist,
                    request_deserializer=vinyl__pb2.VinylTitle.FromString,
                    response_serializer=vinyl__pb2.VinylSimpleList.SerializeToString,
            ),
            'GetVinylRecsYear': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVinylRecsYear,
                    request_deserializer=vinyl__pb2.VinylTitle.FromString,
                    response_serializer=vinyl__pb2.VinylSimpleList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rpc.VinylService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VinylService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVinyl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinyl',
            google_dot_protobuf_dot_wrappers__pb2.Int64Value.SerializeToString,
            vinyl__pb2.Vinyl.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVinylByTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinylByTitle',
            vinyl__pb2.VinylTitle.SerializeToString,
            vinyl__pb2.Vinyl.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVinylSimpleByTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinylSimpleByTitle',
            vinyl__pb2.VinylTitle.SerializeToString,
            vinyl__pb2.VinylSimple.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVinylsBySearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinylsBySearch',
            vinyl__pb2.VinylTitle.SerializeToString,
            vinyl__pb2.VinylList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllVinyls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetAllVinyls',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            vinyl__pb2.VinylList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVinylRecsArtist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinylRecsArtist',
            vinyl__pb2.VinylTitle.SerializeToString,
            vinyl__pb2.VinylSimpleList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVinylRecsYear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpc.VinylService/GetVinylRecsYear',
            vinyl__pb2.VinylTitle.SerializeToString,
            vinyl__pb2.VinylSimpleList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
